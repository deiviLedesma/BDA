
-- caso de uso transferencia
-- trigger
-- Este trigger podría ejecutarse antes de insertar una nueva transacción de transferencia
-- para verificar la validez de la operación y actualizar los saldos de las cuentas afectadas.

CREATE TRIGGER before_transfer
BEFORE INSERT ON transacciones
FOR EACH ROW
BEGIN
  DECLARE saldo_origen DECIMAL(10, 2);
  DECLARE saldo_destino DECIMAL(10, 2);

  -- Obtener el saldo de la cuenta de origen
  SELECT saldo INTO saldo_origen
  FROM cuentas
  WHERE numero_cuenta = NEW.cuenta_origen;

  -- Obtener el saldo de la cuenta de destino
  SELECT saldo INTO saldo_destino
  FROM cuentas
  WHERE numero_cuenta = NEW.cuenta_destino;

  -- Verificar si hay fondos suficientes en la cuenta de origen
  IF saldo_origen >= NEW.monto THEN
    -- Actualizar saldos
    UPDATE cuentas
    SET saldo = saldo_origen - NEW.monto
    WHERE numero_cuenta = NEW.cuenta_origen;

    UPDATE cuentas
    SET saldo = saldo_destino + NEW.monto
    WHERE numero_cuenta = NEW.cuenta_destino;
  ELSE
    -- Cancelar la operación si no hay fondos suficientes
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = 'Saldo insuficiente en la cuenta de origen.';
  END IF;
END;

-- transaccion (ejemplo de insercion de transferencia)
-- Insertar una nueva transacción de transferencia
INSERT INTO transacciones (cuenta_origen, cuenta_destino, monto, tipo_operacion, fecha)
VALUES (123456789, 987654321, 500.00, 'TRANSFERENCIA', NOW());

-- Procedure (ejemplo de consulta de historial de operaciones por cliente y rango de fechas)
-- Crear un procedimiento almacenado para consultar el historial de operaciones por cliente y rango de fechas
DELIMITER //
CREATE PROCEDURE consultar_historial_operaciones(
  IN cliente_id INT,
  IN fecha_inicio DATE,
  IN fecha_fin DATE
)
BEGIN
  SELECT *
  FROM transacciones
  WHERE (cuenta_origen = cliente_id OR cuenta_destino = cliente_id)
    AND fecha BETWEEN fecha_inicio AND fecha_fin;
END //
DELIMITER ;



